#+OPTIONS: toc:nil num:nil timestamp:nil
#+TITLE: Consumer Driven-Contracts with GraphQL
#+AUTHOR: Chris Howe-Jones
#+EMAIL: @agile_geek
#+DATE:  1st May 2018
#+REVEAL_SLIDE_NUMBER: false
#+REVEAL_KEYBOARD:t
#+REVEAL_THEME: league
#+REVEAL_HLEVEL: 2
#+REVEAL_CENTER: true
#+REVEAL_ROOT: ../reveal.js-4.6.0
#+REVEAL_PLUGINS: (highlight markdown notes)
#+REVEAL_INIT_OPTIONS: width:1080, height:950, controlsLayout: 'edges'
#+OPTIONS: ':t
* Consumer Driven-Contracts with Graphql

* Who am I?

  Name:      =Chris Howe-Jones= *[Technical Navigator]*

  Twitter:   =@agile_geek=

  Github:    =http://github.com/chrishowejones=

  LinkedIn:  =https://uk.linkedin.com/in/chrishowejones=

  Organiser: =London Clojurians, Clojure eXchange, ClojureBridge=

  Speaker:   =FP North East, Agile North East, London Clojurians,
  Dynamo Conference, West Midlands JUG, DefShef, Sunderland Uni=

* Consumer Contract?

  Each client has its own requirements
    + Want the fields they want
    + Want to change the state they need to change
    + Want to change requirements independently

* What's wrong with REST?

  How to get different data?
    + Fields listed in GET query string?
    + Fields listed in GET body?
    + Fields listed in POST body?

  The answer is different resources

* What's wrong with REST?

  If I want data from different resources or a graph of objects
  need multiple calls.

* Postel's Law

  /"Be conservative in what you do, be liberal in what you accept from
  others."/

* Tolerant Reader

  Pattern to tolerate provider changing contract.

    + Does adding fields break consumer?
    + Does not sending non mandatory fields break things?

* Issues with parsers?

  Often parsers in statically typed OOP languages assume rigid
  compliance to schema regardless of consumers needs.

* How does graphql help?

  - Self describing (schema).
  - Queries to fetch only what's required.
  - Can fetch object graph in one call.
  - Can have more than one query per call.
  - 'Mutate' only what's required.

* What's it look like?

  DEMO CAKE!

  [[./demo-cake.jpg]]
